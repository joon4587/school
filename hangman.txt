#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
#include <windows.h>
#define dic 5//사전에 있는 단어 갯수
#define diclen 20//단어의 최대 길이

void randomword(char ran[], char ans[]);//사전에 있는 단어를 랜덤으로 가져오는 함수
int check(char ran[], char ans[], char *p);//글자를 입력받아 같은 글자가 있는지 확인하는 함수
void print(int c);//단계에 따른 사람을 출력하는 함수

char dictionary[dic][diclen] = {
	"father"
	,"mother"
	,"wonderful"
	,"security"
	,"hello"
};//단어를 등록해두는 사전

int main()
{
	int a, cnt, chk;//a=재시작확인용 cnt=단계확인용 chk=check함수의 리턴값을 받는용
	char random[diclen], ans[diclen];//random=사전에서 가져온 단어로 모든 글자가 *로 바뀐 후 게임진행 ans=정답 백업

	while (1)//무한반복
	{
		printf("　┏━━┓\n");
		printf("　　　　┃\n");
		printf("　　　　┃\n");
		printf("　　　　┃\n");
		printf("　　　　┃\n");
		printf("　　　　┃\n");//처음에 출력
		cnt = 0;//게임 시작시 단계 초기화
		randomword(random, ans);//랜덤하게 단어를 선택하여 두 함수에 넣어줌
		while (1)//무한반복
		{
			chk = check(random, ans, &cnt);//chk에 check의 리턴값을 넣어줌
			if (chk == 0)//check의 리턴값이 0일경우(틀린 경우)
			{
				print(cnt);//print함수에 cnt를 넣고 실행해 단계에 따른 사람을 표시
				if (cnt == 5)//마지막 4단계를 넘어갔을경우
				{
					printf("You Died\n");
					printf("-1: stop\n1: restart ");//출력
					scanf("%d", &a);//입력
					system("cls");//화면클리어
					if (a == -1) return 0;//-1을 입력받으면 게임 종료
					else if (a == 1) break;//1을 입력받으면 게임을 재시작하기 위해 무한반복문에서 나감
				}
			}
			else if (strcmp(random, ans) == 0)//모든 글자를 밝혀냈을때
			{
				printf("%s\nYou Win\n", ans);//정답과 문구 출력
				printf("-1: stop\n1: restart ");//출력
				scanf("%d", &a);//입력
				system("cls");//화면클리어
				if (a == -1) return 0;//-1을 입력받으면 게임 종료
				else if (a == 1) break;//1을 입력받으면 게임을 재시작하기 위해 무한반복문에서 나감
			}
			else
			{
				print(cnt);
			}
		}
	}
}

void randomword(char ran[], char ans[])//사전에 있는 단어를 랜덤으로 가져오는 함수
{
	int a, len, i;//a=0~dic미만의 랜덤값 len=선택된 문자열의 길이 i=for문에서사용

	srand(time(NULL));//시간에 따른 난수
	a = rand() % dic;//a에 0~dic미만의 정수 하나 지정
	strcpy(ran, dictionary[a]);//ran배열에 사전의 a번째 단어 넣음
	strcpy(ans, dictionary[a]);//ans배열에 사전의 a번째 단어 넣음
	len = strlen(ran);//len에 선택된 단어의 길이 넣음
	for (i = 0;i < len;i++)//문자열의 길이만큼 반복
	{
		ran[i] = '*';//문자열의 *로 바꿔줌
	}
}

int check(char ran[], char ans[], char *p)//글자를 입력받아 같은 글자가 있는지 확인하는 함수
{
	int i, len, cnt;//i=for문에서 사용 len=문자열의 길이 cnt=답을 맞췄는지 확인
	char input;//입력할 글자를 받는것

	cnt = 0;//정답여부 초기화
	len = strlen(ans);//len에 문자열의 길이 넣어줌
	printf("Hint : %s\n", ran);//문구와 현재 밝혀진 글자와 밝혀지지 않은 부분 출력
	printf("input char : ");//출력
	scanf(" %c", &input);//문자입력
	system("cls");//화면클리어

	for (i = 0;i < len;i++)//문자열의 길이만큼 반복
	{
		if (ans[i] == input && ran[i] == '*')//입력한 문자가 밝혀지지 않았고 단어에 있을 경우
		{
			ran[i] = input;//*을 글자로 바꿔줌
			cnt = 1;//정답여부 1로 바꿈
		}
	}
	if (cnt == 0)
	{
		(*p)++;
		return 0;
	}//정답이 없을 경우 0 리턴
	else return 1;//정답이 있을 경우 1리턴
}

void print(int c)//단계에 따른 사람을 출력하는 함수
{
	if (c == 0)//1단계출력
	{
		printf("  ┏━━┓\n");
		printf("　　　　┃\n");
		printf("　　　　┃\n");
		printf("　　　　┃\n");
		printf("　　　　┃\n");
		printf("　　　　┃\n");
	}
	else if (c == 1)//1단계출력
	{
		printf("  ┏━━┓\n");
		printf("　●　　┃\n");
		printf("　　　　┃\n");
		printf("　　　　┃\n");
		printf("　　　　┃\n");
		printf("　　　　┃\n");
	}
	else if (c == 2)//2단계출력
	{
		printf("  ┏━━┓\n");
		printf("　●　　┃\n");
		printf("┏╋┛　┃\n");
		printf("　　　　┃\n");
		printf("　　　　┃\n");
		printf("　　　　┃\n");
	}
	else if (c == 3)//3단계출력
	{
		printf("  ┏━━┓\n");
		printf("　●　　┃\n");
		printf("┏╋┛　┃\n");
		printf("　┃　　┃\n");
		printf("　　　　┃\n");
		printf("　　　　┃\n");
	}
	else if (c == 4)//4단계출력
	{
		printf("  ┏━━┓\n");
		printf("　●　　┃\n");
		printf("┏╋┛　┃\n");
		printf("　┃　　┃\n");
		printf("┏┻┓　┃\n");
		printf("　　　　┃\n");
	}
}